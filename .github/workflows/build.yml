name: Deploy with GitHub Pages 

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  IGK: /igk/bin/igk
  IGK_CLANG: /igk/lib/libigk-clang.so
  IGK_LUA: /igk/share/igk-lua

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive 
          lfs: true
      - name: Fetch dev container
        run: |
           docker pull ghcr.io/cheriot-platform/book-build-container:main
      - name: Build book
        run: |
          docker run --mount type=bind,src=$(pwd),target=/mnt --rm ghcr.io/cheriot-platform/book-build-container:main sh -c 'cd /mnt && sh devcontainer/install_dependencies.sh && cd text && luarocks --lua-version 5.1 --tree lua_modules install resilient.sile && make IGK_PATH=/igk/bin IGK_LIB_PATH=/igk/lib/ IGK_LUA_PATH=/igk/share/igk-lua html cheriot-programmers-guide.pdf cheriot-programmers-guide.epub'
          cp -R text/_site _site
          cp text/cheriot-programmers-guide.{epub,pdf} _site/
          ls -lahR _site
      - name: Create backwards compatibility copies
        run: |
          cd _site
          cp index.html top-copyright-top.html
          for I in adding_a_new_board compartments concepts core_rtos debugging_apis drivers language_extensions memory porting_from_bare_metal porting_from_bare_metal threads ; do cp $I.html top-$I-top.html ;  done
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
